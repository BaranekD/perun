<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
">

	<!-- import PERUN datasources -->
	<import resource="classpath:perun-core.xml" />
	<import resource="classpath:perun-core-jdbc.xml" />
	<import resource="classpath:perun-core-transaction-manager.xml" />

	<!-- Enable @Transactional support -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/>  -->

	<!-- Enable @AspectJ support -->
	<!-- <aop:aspectj-autoproxy/> -->

	<!-- add transaction support for delete publication  -->
	<aop:config>
		<aop:advisor advice-ref="txDeletePublication" pointcut="execution(* cz.metacentrum.perun.cabinet.bl.PublicationManagerBl.deletePublicationById(..))"/>
		<aop:advisor advice-ref="txCreateAuthorship" pointcut="execution(* cz.metacentrum.perun.cabinet.bl.AuthorshipManagerBl.createAuthorship(..))"/>
		<aop:advisor advice-ref="txDeleteAuthorship" pointcut="execution(* cz.metacentrum.perun.cabinet.bl.AuthorshipManagerBl.deleteAuthorshipById(..))"/>
	</aop:config>
	<tx:advice id="txDeletePublication" transaction-manager="perunTransactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	<tx:advice id="txCreateAuthorship" transaction-manager="perunTransactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<tx:advice id="txDeleteAuthorship" transaction-manager="perunTransactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="databaseIdProvider" ref="databaseIdProvider" />
	</bean>

	<!-- MyBatis mapper beans -->
	<bean id="categoryMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
		          value="cz.metacentrum.perun.cabinet.dao.mybatis.CategoryMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<bean id="publicationMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
		          value="cz.metacentrum.perun.cabinet.dao.mybatis.PublicationMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<bean id="authorshipMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
		          value="cz.metacentrum.perun.cabinet.dao.mybatis.AuthorshipMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<bean id="thanksMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
		          value="cz.metacentrum.perun.cabinet.dao.mybatis.ThanksMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- dao classes beans -->

	<bean id="publicationManagerDao" class="cz.metacentrum.perun.cabinet.dao.impl.PublicationManagerDaoImpl">
		<property name="publicationMapper" ref="publicationMapper" />
	</bean>

	<bean id="publicationSystemManagerDao" class="cz.metacentrum.perun.cabinet.dao.impl.PublicationSystemManagerDaoImpl">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean id="authorshipManagerDao" class="cz.metacentrum.perun.cabinet.dao.impl.AuthorshipManagerDaoImpl">
		<property name="authorshipMapper" ref="authorshipMapper" />
	</bean>

	<bean id="thanksManagerDao" class="cz.metacentrum.perun.cabinet.dao.impl.ThanksManagerDaoImpl">
		<property name="thanksMapper" ref="thanksMapper" />
	</bean>

	<bean id="categoryManagerDao" class="cz.metacentrum.perun.cabinet.dao.impl.CategoryManagerDaoImpl">
		<property name="categoryMapper" ref="categoryMapper" />
	</bean>

	<!-- BL classes beans -->

	<bean id="perunManagerBl" class="cz.metacentrum.perun.cabinet.bl.impl.PerunManagerBlImpl" init-method="initialize">
		<property name="thanksManagerDao" ref="thanksManagerDao" />
	</bean>

	<bean id="publicationSystemManagerBl" class="cz.metacentrum.perun.cabinet.bl.impl.PublicationSystemManagerBlImpl" init-method="initialize">
		<property name="publicationSystemManagerDao" ref="publicationSystemManagerDao" />
	</bean>

	<bean id="publicationManagerBl" class="cz.metacentrum.perun.cabinet.bl.impl.PublicationManagerBlImpl">
		<property name="publicationManagerDao" ref="publicationManagerDao" />
		<property name="authorshipService" ref="authorshipManagerBl" />
		<property name="authorService" ref="authorManagerBl" />
		<property name="publicationSystemManagerBl" ref="publicationSystemManagerBl" />
		<property name="perunService" ref="perunManagerBl" />
		<property name="thanksService" ref="thanksManagerBl" />
	</bean>

	<bean id="categoryManagerBl" class="cz.metacentrum.perun.cabinet.bl.impl.CategoryManagerBlImpl">
		<property name="categoryManagerDao" ref="categoryManagerDao" />
		<property name="perunService" ref="perunManagerBl" />
		<property name="publicationService" ref="publicationManagerBl" />
		<property name="authorshipService" ref="authorshipManagerBl" />
		<property name="authorService" ref="authorManagerBl" />
	</bean>

	<bean id="authorManagerBl" class="cz.metacentrum.perun.cabinet.bl.impl.AuthorManagerBlImpl">
		<property name="authorshipManagerDao" ref="authorshipManagerDao" />
	</bean>

	<bean id="authorshipManagerBl" class="cz.metacentrum.perun.cabinet.bl.impl.AuthorshipServiceImpl">
		<property name="authorshipManagerDao" ref="authorshipManagerDao" />
		<property name="publicationService" ref="publicationManagerBl" />
		<property name="categoryService" ref="categoryManagerBl" />
		<property name="authorService" ref="authorManagerBl" />
		<property name="perunService" ref="perunManagerBl" />
	</bean>

	<bean id="thanksManagerBl" class="cz.metacentrum.perun.cabinet.bl.impl.ThanksManagerBlImpl">
		<property name="thanksManagerDao" ref="thanksManagerDao" />
		<property name="authorService" ref="authorManagerBl" />
		<property name="perunService" ref="perunManagerBl" />
	</bean>

	<bean id="httpManagerBl" class="cz.metacentrum.perun.cabinet.bl.impl.HttpManagerBlImpl" />

	<bean id="cabinetManagerBl" class="cz.metacentrum.perun.cabinet.bl.impl.CabinetManagerBlImpl">
		<property name="perunService" ref="perunManagerBl" />
		<property name="httpService" ref="httpManagerBl" />
		<property name="publicationSystemManagerBl" ref="publicationSystemManagerBl" />
	</bean>

	<!-- api classes beans -->

	<bean id="cabinetApi" class="cz.metacentrum.perun.cabinet.api.impl.CabinetApiImpl">
		<property name="cabinetService" ref="cabinetManagerBl" />
		<property name="publicationService" ref="publicationManagerBl" />
		<property name="authorService" ref="authorManagerBl" />
		<property name="authorshipService" ref="authorshipManagerBl" />
		<property name="thanksService" ref="thanksManagerBl" />
		<property name="categoryService" ref="categoryManagerBl" />
		<property name="publicationSystemManagerBl" ref="publicationSystemManagerBl" />
		<property name="perunService" ref="perunManagerBl" />
	</bean>

	<!-- Define compatibility layer for DB specific queries -->
	<bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="PostgreSQL">postgresql</prop>
				<prop key="Oracle">oracle</prop>
				<prop key="HSQL">hsql</prop>
			</props>
		</property>
	</bean>

	<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
		<property name="properties" ref="vendorProperties"/>
	</bean>

	<beans profile="devel,production">
		<!-- Properties Bean, so far used in tests -->
		<bean id="cabinetProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="locations">
				<list>
					<value>file:${perun.conf}perun-cabinet.properties</value>
					<value>file:${perun.conf.custom}perun-cabinet.properties</value>
				</list>
			</property>
			<property name="ignoreResourceNotFound">
				<value>true</value>
			</property>
		</bean>
	</beans>

	<beans profile="default">
		<bean id="cabinetProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="properties">
				<props>
					<prop key="perun.cabinet.mu.login"></prop>
					<prop key="perun.cabinet.mu.password"></prop>
				</props>
			</property>
		</bean>
	</beans>


</beans>
